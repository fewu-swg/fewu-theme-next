@use "./_declaration.scss" as *;

.side.user-intro {
    display: flex;
    flex-direction: column;
    align-items: center;

    & a {
        text-decoration: none;
    }

    & .avatar {
        width: 15.5rem;
        height: 15.5rem;
        object-fit: cover;
        object-position: center;
        border-radius: $card-corner-75;
    }


    .socialLinks {
        display: flex;
        align-items: center;
        margin: 1rem 1rem 0;
        gap: 1rem;

        & .link {
            height: 2.5rem;
            width: 2.5rem;
            font-size: 1.5rem;
            border-radius: $card-corner-75;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--Cbtn-content);
            background-color: var(--Cbtn-regular-bg);
            transition: background-color .25s ease-in-out;

            & svg{
                height: 1em;
            }

            &:hover {
                background-color: var(--Cbtn-regular-bg-hover);
            }
        }
    }
}

.side.user-intro .userName {
    line-height: 1.25;
    position: relative;
    display: block;
    text-align: center;
    margin: .75rem;
    margin-bottom: 2rem;
    cursor: pointer;
    width: fit-content;

    & a {
        transition: color .25s ease-in-out;
        color: var(--Cdisplay);

    }

    &::after {
        content: '';
        position: absolute;
        top: calc(100% + .5rem);
        height: .25rem;
        left: calc(50% - .5rem);
        width: 1rem;
        background-color: var(--Cbrand);
        border-radius: $card-corner-circle;
        pointer-events: none;
        transition-property: left, width;
        transition-duration: .25s;
        transition-timing-function: ease-in-out;

    }

    &:hover a {
        color: var(--Cbrand);

        &::after {
            left: calc(50% - 1rem);
            width: 2rem;

        }
    }
}

@each $type in (category, tag) {
    .side.#{$type}-list {
        & a {
            text-decoration: none;
        }

        &>h2 {
            line-height: 1.25rem;
            font-size: 1.25rem;
            margin: .75rem 1rem 1rem;
            position: relative;

            &::before {
                content: '';
                background-color: var(--Cbrand);
                width: .25rem;
                height: 100%;
                left: -.75rem;
                position: absolute;
                display: block;
                border-radius: $card-corner-circle;
            }
        }
    }
}

.side.category-list>.cates-container {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap: .5rem;

    &>.cate {
        border-radius: $card-corner-50;
        display: flex;
        padding: .5rem;
        align-items: center;
        color: var(--Ctext-75);
        background: transparent;
        transition: background-color .2s ease-in-out, color .2s ease-in-out;

        &:hover {
            color: var(--Cbtn-content);
            background: var(--Cbtn-regular-bg);
        }

        &::after {
            content: attr(data-count);
            color: var(--Cbtn-content);
            background-color: var(--Cbtn-regular-bg);
            display: flex;
            align-items: center;
            justify-content: center;
            width: 1.5rem;
            height: 1.5rem;
            margin-left: auto;
            border-radius: $card-corner-50;
        }
    }
}

.side.tag-list>.tags-container {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    gap: .5rem;

    &>.tag {
        border-radius: $card-corner-50;
        display: block;
        padding: .5rem;
        color: var(--Cbtn-content);
        background: var(--Cbtn-regular-bg);
        transition: background-color .2s ease-in-out;

        &:hover {
            background-color: var(--Cbtn-regular-bg-hover);
        }
    }
}

#markdown_TOC {
    display: none;
}

@media( min-width: 1024px) {
    $line-height: 1.35rem;
    #markdown_TOC {
        position: fixed;
        list-style: none;
        top: 5rem;
        right: calc($card-gap * 1.5);
        width: calc((100vw - var(--Wpage-width))/2 - 3 * $card-gap);
        display: flex;
        flex-direction: column;
        counter-reset: toc_counter_h2;
        color: var(--Ctext-50);
        line-height: #{$line-height};
        font-size: .975rem;
        opacity: 1;
        transition: opacity .125s ease-in-out;
    }

    #markdown_TOC.hide {
        opacity: 0;
        pointer-events: none;
    }

    #markdown_TOC>*{
        cursor: pointer;
        display: flex;
        border-radius: $card-corner-50;
        transition: background-color .125s ease-in-out, color .125s ease-in-out;
    }

    #markdown_TOC .li-2 {
        height: #{$line-height};
        margin: .25rem 0;
        padding: .25rem;
    }

    #markdown_TOC .li-2::before{
        counter-increment: toc_counter_h2;
        content: counter(toc_counter_h2);
        display: inline-block;
        width: #{$line-height};
        height: #{$line-height};
        line-height: #{$line-height};
        font-size: .75rem;
        margin-right: .5rem;
        border-radius: $card-corner-50;
        background-color: var(--Cbtn-regular-bg-hover);
        color: var(--Cbtn-content);
        text-align: center;
        font-family: "Hack", "monospace", monospace;
    }

    @each $level in (3,4,5,6) {
        #markdown_TOC .li-#{$level} {
            color: var(--Ctext-50);
            line-height: #{$line-height};
            height: 1.5rem;
            margin: .25rem 0;
            padding: .25rem;
            padding-left: calc(sqrt($level) * .25rem + .25rem);
        }

        #markdown_TOC .li-#{$level}::before {
            content: '';
            display: inline-block;
            height: #{$line-height};
            width: #{$line-height};
            box-sizing: border-box;
            border-radius: $card-corner-circle;
            background-image: radial-gradient(50% 50%, var(--Cbtn-regular-bg) 30%, transparent 30%);
        }
    }

    #markdown_TOC>*.active {
        color: var(--Cbrand);
    }

    #markdown_TOC>*:hover {
        background-color: var(--Cbtn-regular-bg);
    }
}